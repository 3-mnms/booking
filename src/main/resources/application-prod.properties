myboot.name=Dev Env

#log level
logging.level.root=INFO
logging.level.org.springframework.security=INFO
logging.level.com.mnms.booking.service=INFO

#maria db info
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driverClassName=org.mariadb.jdbc.Driver

# hibernate info
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

# redis 설정
spring.data.redis.host=${REDIS_SERVER_URL}
spring.data.redis.port=${REDIS_PORT}

## kafka
app.kafka.topic.festival-event=festival-topic
app.kafka.topic.payment-event= payment-status-events
app.kafka.topic.payment-cancel-event=payment-cancel-events
app.kafka.topic.transfer-payment-event=payment-transfer-status-events

spring.kafka.bootstrap-servers=${KAFKA_SERVERS}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


# jwt
jwt.public-pem-path=classpath:keys/public.pem
jwt.issuer=festival-user-service
spring.config.import=optional:file:.env[.properties]

# swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.override-with-generic-response=false

# user api
base.service.url=${BASE_API}
user.base.service.url=${USER_BASE_API}
user.service.url=${USER_INFO_API}
user.service.stats.url=${USER_STATS_LIST_API}
booking.user.service.url=${BOOKING_USER_INFO_API}
