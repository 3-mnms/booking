myboot.name=Dev Env

#log level
logging.level.root=INFO
#logging.level.c.mnms.booking.config.RedisConfig=DEBUG
#logging.level.com.basic.myspringboot=debug

logging.level.org.springframework.security=DEBUG

#maria db info
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driverClassName=org.mariadb.jdbc.Driver

# hibernate info
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

# redis 설정 - 로컬 설정
spring.data.redis.host=127.0.0.1
spring.data.redis.port=6379


#spring.redis.password=your_password

## kafka
app.kafka.topic.festival-event=festival-topic
app.kafka.topic.payment-event= payment-status-events
app.kafka.topic.payment-cancel-event=payment-cancel-events

spring.kafka.bootstrap-servers=${KAFKA_SERVERS}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# kafka 사용 X
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration

# jwt
jwt.public-pem-path=classpath:keys/public.pem
jwt.issuer=festival-user-service

spring.config.import=optional:file:.env[.properties]

# swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.override-with-generic-response=false

# user api
user.service.url=${USER_INFO_API}
booking.user.service.url=${BOOKING_USER_INFO_API}